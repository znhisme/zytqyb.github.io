<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>邱同学的小破站</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-05-30T19:56:16.931Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>zytqyb</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>新发布文章测试</title>
    <link href="http://example.com/2021/05/31/%E6%96%B0%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0%E6%B5%8B%E8%AF%95/"/>
    <id>http://example.com/2021/05/31/%E6%96%B0%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0%E6%B5%8B%E8%AF%95/</id>
    <published>2021-05-30T19:29:48.000Z</published>
    <updated>2021-05-30T19:56:16.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="项目搭建"><a href="#项目搭建" class="headerlink" title="项目搭建"></a>项目搭建</h1><p>环境最低要求</p><ol><li><p>mysql 5.7.23</p></li><li><p>推荐使用 idea 或者 Eclipse 运行 运行需要去掉映射路径的项目名</p><p>双击 tomcat 服务器</p><p><img src="https://www.bsat1314.cn//file/img/20201209065338.png" alt="image-20201209065338232"></p><p>单击 modules, 选中项目单击 edit</p><p><img src="https://www.bsat1314.cn//file/img/20201209065447.png" alt="image-20201209065447485"></p><p>将 path 改为/即可</p><p><img src="https://www.bsat1314.cn//file/img/20201209065521.png" alt="image-20201209065521036"></p></li></ol><h2 id="1-创建项目包结构"><a href="#1-创建项目包结构" class="headerlink" title="1.创建项目包结构"></a>1.创建项目包结构</h2><blockquote><p>dao 数据库包</p></blockquote><blockquote><p>filter 过滤器包</p></blockquote><blockquote><p>pojo 实体类包</p></blockquote><blockquote><p>service 业务包</p></blockquote><blockquote><p>util 工具包</p></blockquote><blockquote><p>servlet servlet 包</p></blockquote><h2 id="2-编写实体类"><a href="#2-编写实体类" class="headerlink" title="2.编写实体类"></a>2.编写实体类</h2><p>ORM 映射:表-类映射</p><h2 id="3-编写基础公共类"><a href="#3-编写基础公共类" class="headerlink" title="3.编写基础公共类"></a>3.编写基础公共类</h2><p>1.数据库配置文件</p><blockquote><p>db.properties</p></blockquote><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/blog?userUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false</span></span><br><span class="line"><span class="attr">username</span> = <span class="string">root</span></span><br><span class="line"><span class="attr">password</span> = <span class="string">998926</span></span><br></pre></td></tr></table></figure><p>2.操作数据库基本类</p><blockquote><p>BaseDao</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.bsat1314.dao;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 操作数据库的公共类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String driver;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String username;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 静态代码块类加载就会被初始化</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">        <span class="comment">// 通过类加载器读取对应的资源</span></span><br><span class="line">        InputStream is = BaseDao.class.getClassLoader().getResourceAsStream(<span class="string">&quot;db.properties&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            properties.load(is);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        driver = properties.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">        url = properties.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">        username = properties.getProperty(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        password = properties.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取数据库的连接</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(driver);</span><br><span class="line">            connection = DriverManager.getConnection(url, username, password);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> connection;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 编写查询公共方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ResultSet <span class="title">execute</span><span class="params">(Connection connection, PreparedStatement pstm, ResultSet rs, String sql, Object[] params)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        pstm = connection.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; params.length; i++) &#123;</span><br><span class="line">            pstm.setObject(i+<span class="number">1</span>, params[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        rs = pstm.executeQuery();</span><br><span class="line">        <span class="keyword">return</span> rs;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 编写增删改公共方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">execute</span><span class="params">(Connection connection,PreparedStatement preparedStatement, String sql, Object[] params)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; params.length; i++) &#123;</span><br><span class="line">            <span class="comment">// setObject, 占位符从1开始1,单位i我们的数组是从0开始的!</span></span><br><span class="line">            preparedStatement.setObject(i, params[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> updateRows = preparedStatement.executeUpdate();</span><br><span class="line">        <span class="keyword">return</span> updateRows;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//释放资源</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">closeResource</span><span class="params">(Connection connection, PreparedStatement preparedStatement, ResultSet resultSet)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((resultSet != <span class="keyword">null</span>)) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">                <span class="comment">// GC回收</span></span><br><span class="line">                resultSet = <span class="keyword">null</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                flag = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((preparedStatement != <span class="keyword">null</span>)) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                preparedStatement.close();</span><br><span class="line">                <span class="comment">// GC回收</span></span><br><span class="line">                preparedStatement = <span class="keyword">null</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                flag = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((connection != <span class="keyword">null</span>)) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">                <span class="comment">// GC回收</span></span><br><span class="line">                connection = <span class="keyword">null</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                flag = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="登录功能实现"><a href="#登录功能实现" class="headerlink" title="登录功能实现"></a>登录功能实现</h1><p>1.编写前端页面</p><p>2.编写 UserDao 接口</p><blockquote><p>UserDao</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.bsat1314.dao.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.bsat1314.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 得到登陆的用户</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getLoginUser</span><span class="params">(Connection connection, String usercode)</span> <span class="keyword">throws</span> SQLException</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.编写 UserDao 实现类</p><blockquote><p>UserDaoImpl</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.bsat1314.dao.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.bsat1314.dao.BaseDao;</span><br><span class="line"><span class="keyword">import</span> cn.bsat1314.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getLoginUser</span><span class="params">(Connection connection, String usercode)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        PreparedStatement pstm = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        User user = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            String sql = <span class="string">&quot;select * from users where usercode=?&quot;</span>;</span><br><span class="line">            Object[] params = &#123;usercode&#125;;</span><br><span class="line">            rs = BaseDao.execute(connection, pstm, rs, sql, params);</span><br><span class="line">            <span class="keyword">if</span>(rs.next())&#123;</span><br><span class="line">                user = <span class="keyword">new</span> User();</span><br><span class="line">                user.setId(rs.getInt(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">                user.setUsername(rs.getString(<span class="string">&quot;username&quot;</span>));</span><br><span class="line">                user.setUsercode(rs.getString(<span class="string">&quot;usercode&quot;</span>));</span><br><span class="line">                user.setPassword(rs.getString(<span class="string">&quot;password&quot;</span>));</span><br><span class="line">                user.setRole(rs.getString(<span class="string">&quot;role&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            BaseDao.closeResource(<span class="keyword">null</span>, pstm, rs);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4.业务层接口</p><blockquote><p>UserService</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.bsat1314.service.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.bsat1314.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 用户登录</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(String usercode, String password)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>5.业务层实现类</p><blockquote><p>UserServiceImpl</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.bsat1314.dao.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.bsat1314.dao.BaseDao;</span><br><span class="line"><span class="keyword">import</span> cn.bsat1314.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getLoginUser</span><span class="params">(Connection connection, String usercode)</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        PreparedStatement pstm = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">        User user = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (connection != <span class="keyword">null</span>) &#123;</span><br><span class="line">            String sql = <span class="string">&quot;select * from users where usercode=?&quot;</span>;</span><br><span class="line">            Object[] params = &#123;usercode&#125;;</span><br><span class="line">            rs = BaseDao.execute(connection, pstm, rs, sql, params);</span><br><span class="line">            <span class="keyword">if</span>(rs.next())&#123;</span><br><span class="line">                user = <span class="keyword">new</span> User();</span><br><span class="line">                user.setId(rs.getInt(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">                user.setUsername(rs.getString(<span class="string">&quot;username&quot;</span>));</span><br><span class="line">                user.setUsercode(rs.getString(<span class="string">&quot;usercode&quot;</span>));</span><br><span class="line">                user.setPassword(rs.getString(<span class="string">&quot;password&quot;</span>));</span><br><span class="line">                user.setRole(rs.getString(<span class="string">&quot;role&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            BaseDao.closeResource(<span class="keyword">null</span>, pstm, rs);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>7.编写 Servlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.bsat1314.blog.servlet.user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.bsat1314.blog.pojo.User;</span><br><span class="line"><span class="keyword">import</span> cn.bsat1314.blog.service.user.UserServiceImpl;</span><br><span class="line"><span class="keyword">import</span> cn.bsat1314.blog.util.Constants;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理登录请求</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Servlet: 控制层,调用业务层代码</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;LoginServlet--start----&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取用户名和密码</span></span><br><span class="line">        String usercode = req.getParameter(<span class="string">&quot;usercode&quot;</span>);</span><br><span class="line">        String password = req.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 和数据库中的密码进行对比, 调用业务层;</span></span><br><span class="line">        UserServiceImpl userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        User user = userService.login(usercode, password);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (user.getUsercode().equals(usercode) &amp;&amp; user.getPassword().equals(password)) &#123; <span class="comment">// 查有此人可以登录</span></span><br><span class="line">            <span class="comment">// 将用户的信息换号Session中;</span></span><br><span class="line">            req.getSession().setAttribute(Constants.USER_SESSION, user);</span><br><span class="line">            <span class="comment">// 登录成功后跳转重定向到后台页面</span></span><br><span class="line">            resp.sendRedirect(<span class="string">&quot;/admin.jsp&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">// 查无此人, 无法登录</span></span><br><span class="line">            <span class="comment">// 请求转发回登录页面,并且提示用户名或者密码错误</span></span><br><span class="line">            System.out.println(<span class="string">&quot;查无此人&quot;</span>);</span><br><span class="line">            req.setAttribute(<span class="string">&quot;error&quot;</span>, <span class="string">&quot;用户名或者密码不正确&quot;</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/&quot;</span>).forward(req, resp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>8.注册 Servlet</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LoginServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.bsat1314.blog.servlet.user.LoginServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LoginServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/login<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>9.测试访问,确保能够登录</p><h1 id="登录功能优化"><a href="#登录功能优化" class="headerlink" title="登录功能优化"></a>登录功能优化</h1><h2 id="1-实现退出功能"><a href="#1-实现退出功能" class="headerlink" title="1.实现退出功能"></a>1.实现退出功能</h2><p>1.编写 LogoutServlet 类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogoutServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;    <span class="meta">@Override</span>    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;        req.getSession().removeAttribute(Constants.USER_SESSION);        resp.sendRedirect(<span class="string">&quot;/index.jsp&quot;</span>);    &#125;    <span class="meta">@Override</span>    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;        doGet(req, resp);    &#125;&#125;</span><br></pre></td></tr></table></figure><p>2.在 web.xml 注册 Servlet</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span>        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LogoutServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span>        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>cn.bsat1314.blog.servlet.user.LogoutServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span>    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span>    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span>        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LogoutServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span>        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/logout<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span>    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="登录拦截优化"><a href="#登录拦截优化" class="headerlink" title="登录拦截优化"></a>登录拦截优化</h2><p>1.编写过滤器 SysFilter 类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SysFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;    <span class="meta">@Override</span>    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;        HttpServletRequest req = (HttpServletRequest) servletRequest;        HttpServletResponse resp = (HttpServletResponse) servletResponse;        <span class="comment">// 过滤器, 从Session中获取用户        User user = (User) req.getSession().getAttribute(Constants.USER_SESSION);        if (user == null) &#123; // 没有登录或者被移除            resp.sendRedirect(&quot;/&quot;);        &#125; else &#123;            filterChain.doFilter(servletRequest, servletResponse);        &#125;    &#125;    @Override    public void init(FilterConfig filterConfig) throws ServletException &#123;    &#125;    @Override    public void destroy() &#123;    &#125;&#125;</span></span><br></pre></td></tr></table></figure><p>2.在 web.xml 注册过滤器并且设置过滤的请求</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 用户登录过滤器 --&gt;</span>    <span class="tag">&lt;<span class="name">filter</span>&gt;</span>        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>SysFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span>        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>cn.bsat1314.blog.filter.SysFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span>    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span>    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span>        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>SysFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span>        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/admin/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span>    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="密码修改功能实现"><a href="#密码修改功能实现" class="headerlink" title="密码修改功能实现"></a>密码修改功能实现</h1><p>1.编写 UserDao 接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改当前用户密码    public int updatepwd(Connection connection, int id, String password) throws SQLException;</span></span><br></pre></td></tr></table></figure><p>2.UserDao 接口实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 实现用户密码修改功能    @Override    public int updatepwd(Connection connection, int id, String password) throws SQLException &#123;        PreparedStatement pstm = null;        int execute = 0;        if (connection != null)&#123;            String sql = &quot;update users set password = ? where id = ?&quot;;            Object params[] = &#123;password, id&#125;;            execute = BaseDao.execute(connection, pstm, sql, params);            BaseDao.closeResource(null, pstm, null);        &#125;        return execute;    &#125;</span></span><br></pre></td></tr></table></figure><p>3.UserService 接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改当前用户密码    public boolean updatepwd(int id, String password);</span></span><br></pre></td></tr></table></figure><p>4.UserServiceImpl 实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改当前用户密码    @Override    public boolean updatepwd(int id, String password) &#123;        Connection connection = null;        boolean flag = false;        try &#123;            connection = BaseDao.getConnection();            if (userDao.updatepwd(connection, id, password) &gt; 0) &#123;                flag = true;            &#125;        &#125; catch (SQLException throwables) &#123;            throwables.printStackTrace();        &#125;finally &#123;            BaseDao.closeResource(connection, null, null);        &#125;        return flag;    &#125;</span></span><br></pre></td></tr></table></figure><p>5.编写 UserServlet 并且实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从Session拿到ID;Object o = req.getSession().getAttribute(Constants.USER_SESSION);String password = req.getParameter(&quot;password&quot;);String newpassword = req.getParameter(&quot;newpassword&quot;);boolean flag = false;if (o != null &amp;&amp; newpassword != null) &#123;    UserServiceImpl userService = new UserServiceImpl();    flag = userService.updatepwd(((User) o).getId(), newpassword);    if (flag) &#123;        req.setAttribute(&quot;message&quot;, &quot;修改密码成功, 请退出使用新密码登录&quot;);        // 密码修改成功删除Session        req.getSession().removeAttribute(Constants.USER_SESSION);    &#125; else &#123;        req.setAttribute(&quot;message&quot;, &quot;修改密码失败,请重试&quot;);    &#125;&#125; else &#123;    req.setAttribute(&quot;message&quot;, &quot;修改密码失败,请重试&quot;);&#125;req.getRequestDispatcher(&quot;modify.jsp&quot;).forward(req, resp);</span></span><br></pre></td></tr></table></figure><p>6.注册 Servlet</p><p>7.实现 Servlet 复用, 注意提取方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 实现Servlet复用public class UserServlet extends HttpServlet &#123;    @Override    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;        String method = req.getParameter(&quot;method&quot;);        if (method != null &amp;&amp; method.equals(&quot;modifypwd&quot;)) &#123;            this.updatePwd(req, resp);        &#125;    &#125;    @Override    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;        doGet(req, resp);    &#125;    public void updatePwd(HttpServletRequest req, HttpServletResponse resp) &#123;        // 从Session拿到ID;        Object o = req.getSession().getAttribute(Constants.USER_SESSION);        String password = req.getParameter(&quot;password&quot;);        String newpassword = req.getParameter(&quot;newpassword&quot;);        boolean flag = false;        if (o != null &amp;&amp; newpassword != null) &#123;            UserServiceImpl userService = new UserServiceImpl();            flag = userService.updatepwd(((User) o).getId(), newpassword);            if (flag) &#123;                req.setAttribute(&quot;message&quot;, &quot;修改密码成功, 请退出使用新密码登录&quot;);                // 密码修改成功删除Session                req.getSession().removeAttribute(Constants.USER_SESSION);            &#125; else &#123;                req.setAttribute(&quot;message&quot;, &quot;修改密码失败,请重试&quot;);            &#125;        &#125; else &#123;            req.setAttribute(&quot;message&quot;, &quot;修改密码失败,请重试&quot;);        &#125;        try &#123;            req.getRequestDispatcher(&quot;modify.jsp&quot;).forward(req, resp);        &#125; catch (ServletException e) &#123;            e.printStackTrace();        &#125; catch (IOException e) &#123;            e.printStackTrace();        &#125;    &#125;&#125;</span></span><br></pre></td></tr></table></figure><h1 id="优化密码修改使用-Ajax"><a href="#优化密码修改使用-Ajax" class="headerlink" title="优化密码修改使用 Ajax"></a>优化密码修改使用 Ajax</h1><p>1.阿里巴巴的 fastjson</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/fastjson --&gt;</span><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.61<span class="tag">&lt;/<span class="name">version</span>&gt;</span><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.编写判断用户输入的密码和 Session 中的密码是否一样并给出相对应的响应值通过结果集 map 给到 jsp</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 验证旧密码    public void pwdModify(HttpServletRequest req, HttpServletResponse resp) &#123;        Object o = req.getSession().getAttribute(Constants.USER_SESSION);        String oldpassword = req.getParameter(&quot;oldpassword&quot;);        // 万能的Map : 结果集        Map&lt;String, String&gt; resultMap = new HashMap&lt;String, String&gt;();        if (o == null) &#123; // Session失效了, session过期了            resultMap.put(&quot;result&quot;, &quot;sessionerror&quot;);        &#125; else if (StringUtils.isNullOrEmpty(oldpassword)) &#123; // 输入的密码为空            resultMap.put(&quot;result&quot;, &quot;error&quot;);        &#125;else &#123;            String password = ((User) o).getPassword(); // Session中用户的密码            if (oldpassword.equals(password)) &#123; // 如果用户输入的密码和Session中的密码一样这                resultMap.put(&quot;result&quot;, &quot;true&quot;);            &#125;else &#123;                resultMap.put(&quot;result&quot;, &quot;false&quot;);            &#125;        &#125;        try &#123;            resp.setContentType(&quot;application/json&quot;); // 设置返回的是json值            PrintWriter writer = resp.getWriter();            // JSONArray阿里巴巴的JSON工具类, 转换格式            /*            resultMap = [&quot;result&quot;,&quot;sessionerror&quot;,&quot;result&quot;, &quot;error&quot;]            Json格式 = &#123;key : value&#125;            */            writer.write(JSONArray.toJSONString(resultMap));            writer.flush();            writer.close();        &#125; catch (IOException e) &#123;            e.printStackTrace();        &#125;    &#125;</span></span><br></pre></td></tr></table></figure><p>3.编写 common.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> path = $(<span class="string">&quot;#path&quot;</span>).val();<span class="keyword">var</span> imgYes = <span class="string">&quot;&lt;img width=&#x27;15px&#x27; src=&#x27;/admin/img/y.png&#x27;/&gt;&quot;</span>;<span class="keyword">var</span> imgNo = <span class="string">&quot;&lt;img width=&#x27;15px&#x27; src=&#x27;/admin/img/n.png&#x27;/&gt;&quot;</span>;<span class="comment">/** * 提示信息显示 * element:显示提示信息的元素（font） * css：提示样式 * tipString:提示信息 * status：true/false --验证是否通过 */</span><span class="function"><span class="keyword">function</span> <span class="title">validateTip</span>(<span class="params">element, css, tipString, status</span>) </span>&#123;  element.css(css);  element.html(tipString);  element.next().attr(<span class="string">&quot;status&quot;</span>, status);&#125;</span><br></pre></td></tr></table></figure><p>4.编写 pwdmodify.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> oldpassword = <span class="literal">null</span>;<span class="keyword">var</span> newpassword = <span class="literal">null</span>;<span class="keyword">var</span> tj = <span class="literal">null</span>;$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  oldpassword = $(<span class="string">&quot;#oldpassword&quot;</span>);  newpassword = $(<span class="string">&quot;#newpassword&quot;</span>);  tj = $(<span class="string">&quot;#tj&quot;</span>);  <span class="comment">// 使用ajax验证输入的密码和登录的密码是否相等  oldpassword    .on(&quot;blur&quot;, function () &#123;      $.ajax(&#123;        type: &quot;GET&quot;,        url: &quot;/admin/user&quot;,        data: &#123; method: &quot;pwdmodify&quot;, oldpassword: oldpassword.val() &#125;,        dataType: &quot;json&quot;,        success: function (data) &#123;          if (data.result == &quot;true&quot;) &#123;            //旧密码正确            validateTip(              oldpassword.prev(),              &#123; color: &quot;green&quot;, &quot;margin-bottom&quot;: &quot;5px&quot; &#125;,              imgYes + &quot;旧密码正确&quot;,              true            );          &#125; else if (data.result == &quot;false&quot;) &#123;            //旧密码输入不正确            validateTip(              oldpassword.prev(),              &#123; color: &quot;red&quot;, &quot;margin-bottom&quot;: &quot;5px&quot; &#125;,              imgNo + &quot;原密码输入不正确&quot;,              false            );          &#125; else if (data.result == &quot;sessionerror&quot;) &#123;            // Session过期            validateTip(              oldpassword.prev(),              &#123;                color: &quot;red&quot;,                &quot;margin-bottom&quot;: &quot;5px&quot;,              &#125;,              imgNo + &quot;当前用户session过期, 请重新登录&quot;,              false            );          &#125; else if (data.result == &quot;error&quot;) &#123;            // 旧密码输入为空            validateTip(              oldpassword.prev(),              &#123; color: &quot;red&quot;, &quot;margin-bottom&quot;: &quot;5px&quot; &#125;,              imgNo + &quot;请输入旧密码&quot;,              false            );          &#125;        &#125;,        error: function (data) &#123;          // 请求出错          validateTip(            oldpassword.prev(),            &#123; color: &quot;red&quot;, &quot;margin-bottom&quot;: &quot;5px&quot; &#125;,            imgNo + &quot;请求出错&quot;,            false          );        &#125;,      &#125;);    &#125;)    .on(&quot;focus&quot;, function () &#123;      validateTip(        oldpassword.prev(),        &#123; color: &quot;red&quot;, &quot;margin-bottom&quot;: &quot;5px&quot; &#125;,        imgNo + &quot;请输入旧密码&quot;,        false      );    &#125;);  // 验证新密码的可用性  newpassword    .on(&quot;focus&quot;, function () &#123;      validateTip(        newpassword.prev(),        &#123; color: &quot;#666666&quot; &#125;,        &quot;* 密码长度必须是大于等于6小于20&quot;,        false      );    &#125;)    .on(&quot;blur&quot;, function () &#123;      if (        newpassword.val() != null &amp;&amp;        newpassword.val().length &gt;= 6 &amp;&amp;        newpassword.val().length &lt; 20      ) &#123;        validateTip(          newpassword.prev(),          &#123; color: &quot;green&quot; &#125;,          imgYes + &quot;密码可用&quot;,          true        );      &#125; else &#123;        validateTip(          newpassword.prev(),          &#123; color: &quot;red&quot; &#125;,          imgNo + &quot;密码输入不符合规范，请重新输入&quot;,          false        );      &#125;    &#125;);  tj.on(&quot;click&quot;, function () &#123;    oldpassword.blur();    newpassword.blur();    if (      oldpassword.attr(&quot;status&quot;) == &quot;true&quot; &amp;&amp;      newpassword.attr(&quot;status&quot;) == &quot;true&quot;    ) &#123;      if (confirm(&quot;确定要修改密码？&quot;)) &#123;        $(&quot;#modify-password&quot;).submit();      &#125;    &#125;  &#125;);&#125;);</span></span><br></pre></td></tr></table></figure><h1 id="用户管理功能实现"><a href="#用户管理功能实现" class="headerlink" title="用户管理功能实现"></a>用户管理功能实现</h1><p><img src="https://www.bsat1314.cn//file/img/20201112235421.png" alt="image-20201112235421646"></p><h2 id="1-获取用户数量"><a href="#1-获取用户数量" class="headerlink" title="1.获取用户数量"></a>1.获取用户数量</h2><p>1.UsersDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据用户名或者角色查询用户总数    public int getUserCount(String username, int role) throws SQLException;</span></span><br></pre></td></tr></table></figure><p>2.UsersDaoImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 根据用户名或者角色查询用户总数    @Override    public int getUserCount(String username, int role) throws SQLException &#123;        QueryRunner queryRunner = new QueryRunner(JdbcC3p0Utils.getDataSource());        StringBuffer sql = new StringBuffer();        sql.append(&quot;select count(1) as `count` from users u, role r where u.role = r.id&quot;);        ArrayList&lt;Object&gt; list = new ArrayList&lt;&gt;();// 存放我们的参数        if (!StringUtils.isNullOrEmpty(username)) &#123;            sql.append(&quot; and u.username like ?&quot;);            list.add(&quot;%&quot;+ username +&quot;%&quot;);; // 数组下标0        &#125;        if (role &gt; 0) &#123;            sql.append(&quot; and u.role = ?&quot;);            list.add(role);;  // 数组下标1        &#125;        System.out.println(&quot;UserDaoImpl-&gt; getUserCount:&quot; + sql.toString()); // 输出最后完整的sql语句        // 把list转换成数组 list.toArray()        Number count = queryRunner.query(sql.toString(), new ScalarHandler&lt;&gt;(&quot;count&quot;), list.toArray());        return count.intValue();    &#125;</span></span><br></pre></td></tr></table></figure><p>3.UsersService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查询记录数量    public int getUserCount(String username, int useRole);</span></span><br></pre></td></tr></table></figure><p>4.UsersServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查询记录数量    @Override    public int getUserCount(String username, int useRole) &#123;        int userCount = 0;        try &#123;            userCount = usersDao.getUserCount(username, useRole);        &#125; catch (SQLException throwables) &#123;            throwables.printStackTrace();        &#125;        return userCount;    &#125;</span></span><br></pre></td></tr></table></figure><h2 id="2-获取用户列表"><a href="#2-获取用户列表" class="headerlink" title="2.获取用户列表"></a>2.获取用户列表</h2><p>1.UsersDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过条件获取用户列表    public List&lt;User&gt; getUserList(String username, int role, int currentPageNo, int pageSize) throws SQLException;</span></span><br></pre></td></tr></table></figure><p>2.UsersDaoImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span>    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">getUserList</span><span class="params">(String username, <span class="keyword">int</span> role, <span class="keyword">int</span> currentPageNo, <span class="keyword">int</span> pageSize)</span> <span class="keyword">throws</span> SQLException </span>&#123;        QueryRunner queryRunner = <span class="keyword">new</span> QueryRunner(JdbcC3p0Utils.getDataSource());        List&lt;User&gt; userList = <span class="keyword">null</span>;        <span class="keyword">if</span> (queryRunner != <span class="keyword">null</span>) &#123;            StringBuffer sql = <span class="keyword">new</span> StringBuffer();            sql.append(<span class="string">&quot;select count(1) as `count` from users u, role r where u.role = r.id&quot;</span>);            ArrayList&lt;Object&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();<span class="comment">// 存放我们的参数            if (!StringUtils.isNullOrEmpty(username)) &#123;                sql.append(&quot; and u.username like ?&quot;);                list.add(&quot;%&quot; + username + &quot;%&quot;); // 数组下标0            &#125;            if (role &gt; 0) &#123;                sql.append(&quot; and u.role = ?&quot;);                list.add(role);// 数组下标1            &#125;            // 分页功能 在数据库中分页使用Limit startIndex, pageSize; 总数            // 当前页 (当前页-1) * 页面大小            // 0-&gt;5 第一页  1 0 01234            // 6-&gt;5 第二页  2 5 56789            // 11-&gt;5 第三页            sql.append(&quot;ORDER BY `id` DESC LIMIT ?,?&quot;);            currentPageNo = (currentPageNo-1) * pageSize;            list.add(currentPageNo);;            list.add(pageSize);            userList = queryRunner.query(sql.toString(), new BeanListHandler&lt;User&gt;(User.class), list.toArray());        &#125;        return userList;    &#125;</span></span><br></pre></td></tr></table></figure><p>3.UsersService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过条件获取用户列表    public List&lt;User&gt; getUserList(String username, int role, int currentPageNo, int pageSize);</span></span><br></pre></td></tr></table></figure><p>4.UsersServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过条件获取用户列表    @Override    public List&lt;User&gt; getUserList(String username, int role, int currentPageNo, int pageSize) &#123;        List&lt;User&gt; userList = null;        System.out.println(&quot;username --- &gt; &quot; + username);        System.out.println(&quot;role --- &gt; &quot; + role);        System.out.println(&quot;currentPageNo --- &gt; &quot; + currentPageNo);        System.out.println(&quot;pageSize --- &gt; &quot; + pageSize);        try &#123;            userList = usersDao.getUserList(username, role, currentPageNo, currentPageNo);        &#125; catch (SQLException throwables) &#123;            throwables.printStackTrace();        &#125;        return userList;    &#125;</span></span><br></pre></td></tr></table></figure><h2 id="3-获取用户角色列表"><a href="#3-获取用户角色列表" class="headerlink" title="3.获取用户角色列表"></a>3.获取用户角色列表</h2><p>1.UsersDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取用户等级列表    public List&lt;Role&gt; getRoleList() throws SQLException;&#125;</span></span><br></pre></td></tr></table></figure><p>2.UsersDaoImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取用户等级列表    @Override    public List&lt;Role&gt; getRoleList() throws SQLException &#123;        QueryRunner queryRunner = new QueryRunner(JdbcC3p0Utils.getDataSource());        String sql = &quot;select * from role&quot;;        List&lt;Role&gt; query = queryRunner.query(sql, new BeanListHandler&lt;Role&gt;(Role.class));        return query;    &#125;</span></span><br></pre></td></tr></table></figure><p>3.UsersService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取用户等级列表    public List&lt;Role&gt; getRoleList();</span></span><br></pre></td></tr></table></figure><p>4.UsersServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取用户等级列表@Override    public List&lt;Role&gt; getRoleList()&#123;        List&lt;Role&gt; roleList = null;        try &#123;            roleList = roleDao.getRoleList();        &#125; catch (SQLException throwables) &#123;            throwables.printStackTrace();        &#125;        return roleList;    &#125;</span></span><br></pre></td></tr></table></figure><h1 id="Mysql-自动创建时间和更新时间"><a href="#Mysql-自动创建时间和更新时间" class="headerlink" title="Mysql 自动创建时间和更新时间"></a>Mysql 自动创建时间和更新时间</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1. 在插入记录时，会添加当前时间，但在修改记录时，不会再更新当前时间</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `users`</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">COLUMN</span> `creationDate`  <span class="type">TIMESTAMP</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 2.只有对记录进行修改时才更新为当前时间，插入时不会：</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `users`</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">COLUMN</span> `modifyDate`  <span class="type">TIMESTAMP</span> <span class="keyword">NULL</span> <span class="keyword">ON</span> UPDATE <span class="built_in">CURRENT_TIMESTAMP</span></span><br></pre></td></tr></table></figure><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><p>数据库文件导入失败是因为 mysql 版本过低 建议使用开发时使用的 mysql5.7.23</p><div id="bom"></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;项目搭建&quot;&gt;&lt;a href=&quot;#项目搭建&quot; class=&quot;headerlink&quot; title=&quot;项目搭建&quot;&gt;&lt;/a&gt;项目搭建&lt;/h1&gt;&lt;p&gt;环境最低要求&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;mysql 5.7.23&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;推荐使用 idea</summary>
      
    
    
    
    <category term="web前端" scheme="http://example.com/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="测试" scheme="http://example.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/05/30/hello-world/"/>
    <id>http://example.com/2021/05/30/hello-world/</id>
    <published>2021-05-30T11:48:41.343Z</published>
    <updated>2021-05-30T11:48:41.343Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
